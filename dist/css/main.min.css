a,abbr,acronym,address,applet,b,big,blockquote,body,caption,center,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,html,i,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,s,samp,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,var{margin:0;padding:0;border:0;outline:0;vertical-align:baseline;background:0 0;border-spacing:0}button,input{border:0;-webkit-border-radius:0;border-radius:0}a:active,a:hover,button:active,button:hover,input:active,input:hover{cursor:pointer;background-color:transparent;border:0;-webkit-border-radius:0;border-radius:0}a{text-decoration:none}ul{list-style-type:none}:active,:focus,:hover{outline:0;outline-offset:0}button,input[type=button i],input[type=file i]::-webkit-file-upload-button,input[type=reset i],input[type=submit i]{padding:0}button,input[type=button],input[type=color],input[type=reset],input[type=submit]{padding:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{position:relative}.container{max-width:inherit;width:100%;margin:0 auto;padding:0 15px}@media screen and (min-width:768px){.container{padding:0 40px}}@media screen and (min-width:801px){.container{padding:0 100px}}@media screen and (min-width:1367px){.container{max-width:1100px;padding:0}}.about,.booking,.container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}section:nth-of-type(even){background-color:#fff}section:nth-of-type(odd){background-color:#2f3506}.booking__title,.calendar__title{color:#fff;font-family:OpenSansLight,sans-serif;font-size:28px;font-weight:300;line-height:38px;text-align:center;white-space:pre-line}@media screen and (min-width:768px){.booking__title,.calendar__title{font-size:30px;line-height:40px}}@media screen and (min-width:801px){.booking__title,.calendar__title{font-size:35px;line-height:45px}}@media screen and (min-width:1367px){.booking__title,.calendar__title{font-size:40px;line-height:55px}}.about__title,.service__title{color:#2d2d2d;font-size:20px;font-weight:400;letter-spacing:2px;line-height:55px;position:relative;text-transform:uppercase;font-family:OpenSans,sans-serif}.about__title:after,.service__title:after{content:'';display:block;position:absolute;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);width:-webkit-calc(100% - 154px);width:calc(100% - 154px);height:2px;background-color:#c49b1d}@media screen and (min-width:801px){.about__title,.service__title{font-size:30px;line-height:55px;letter-spacing:3px}}@media screen and (min-width:1367px){.about__title,.service__title{font-size:35px;letter-spacing:3.5px}}.calendly-inline-widget{width:100%;max-height:550px}@media screen and (min-width:540px){.calendly-inline-widget{max-height:initial;min-height:700px}}@media screen and (min-width:880px){.calendly-inline-widget{min-height:570px;max-height:570px}}.calendly-inline-widget .profile-info-event-type-name{color:red}@font-face{font-display:swap;font-family:OpenSansBold;src:url(../fonts/OpenSans-Bold/OpenSans-Bold.eot);src:url(../fonts/OpenSans-Bold/OpenSans-Bold.svg);src:url(../fonts/OpenSans-Bold/OpenSans-Bold.ttf);src:url(../fonts/OpenSans-Bold/OpenSans-Bold.woff);font-style:normal;font-weight:400}@font-face{font-display:swap;font-family:OpenSansLight;src:url(../fonts/OpenSans-Light/OpenSans-Light.eot);src:url(../fonts/OpenSans-Light/OpenSans-Light.svg);src:url(../fonts/OpenSans-Light/OpenSans-Light.ttf);src:url(../fonts/OpenSans-Light/OpenSans-Light.woff);font-style:normal;font-weight:400}@font-face{font-display:swap;font-family:OpenSans;src:url(../fonts/OpenSans/OpenSans.woff2);src:url(../fonts/OpenSans/OpenSans.ttf);src:url(../fonts/OpenSans/OpenSans.woff);font-style:normal;font-weight:400}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
